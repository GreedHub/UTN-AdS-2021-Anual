apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name}}
  labels:
    app: {{ .Values.name}}
spec:
  replicas: {{ .Values.replicaCount}}
  selector:
    matchLabels:
      app: {{ .Values.name}}
  template:
    metadata:
      labels:
        app: {{ .Values.name}}
      annotations:
        timestamp: "{{ .Values.timestamp }}"
    spec:
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret}}
      containers:
      - name: {{ .Values.name}}
        image: {{ .Values.image.name}}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.exposedPort}}
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 20
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.exposedPort}}
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 20
          periodSeconds: 30
        resources:
          requests:
            memory: "32Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "1"
        env:
        - name: "APP_NAME"
          value: {{ .Values.name}}
        - name: "PORT"
          value: {{ .Values.exposedPort | quote}}
        - name: "CORS_ENABLED_ORIGINS"
          value: {{ .Values.corsEnabledOrigins | quote}}
        - name: "MONGO_URL"
          value: {{ .Values.mongoUrl | quote}}
        - name: "PASSWORD_ALGORYTHM"
          value: {{ .Values.password.algorythm | quote}}
        - name: "PASSWORD_KEYLEN"
          value: {{ .Values.password.keylen | quote}}
        - name: "PASSWORD_ITERATIONS"
          value: {{ .Values.password.iterations | quote}}
        - name: "PASSWORD_SALTLEN"
          value: {{ .Values.password.saltlen | quote}}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - name: {{ .Values.name}}-d
          containerPort: {{ .Values.exposedPort}}
          
---

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ .Values.name}}
spec:
  minAvailable: {{ .Values.replicaCount}}
  selector:
    matchLabels:
      app: {{ .Values.name}}

---

kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.name}}
spec:
  type: NodePort
  selector:
    app: {{ .Values.name}}
  ports:
  - protocol: TCP
    name: {{ .Values.name}}-s
    port: {{ .Values.exposedPort}}
    targetPort: {{ .Values.exposedPort}}
---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.name}}
  namespace: default
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`{{ .Values.host}}`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: {{ .Values.name}}
      port: {{ .Values.exposedPort}}
  tls:
    certResolver: default
    options: {}